{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/fuvestlivrosquiz/pages/quiz/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport QuizScreen from '../../src/screens/Quiz';\nexport default function QuizDaGaleraPage({\n  dbExterno\n}) {\n  // const [db, setDb] React.useState({}) //NUNCA viria pre-renderizado\n  // React.useEffect(() => {\n  // });\n  return __jsx(ThemeProvider, {\n    theme: dbExterno.theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(QuizScreen, {\n    externalQuestions: dbExterno.questions,\n    externalBg: dbExterno.bg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  })) // {/* <pre style={{ color: 'black' }}>\n  //   {JSON.stringify(dbExterno.questions, null, 4)}\n  // </pre> */}\n  ;\n}\nexport async function getServerSideProps(context) {\n  const [projectName, githubUser] = context.query.id.split('___');\n\n  try {\n    const dbExterno = await fetch(`https://${projectName}.${githubUser}.vercel.app/api/db`).then(respostaDoServer => {\n      if (respostaDoServer.ok) {\n        return respostaDoServer.json();\n      }\n\n      throw new Error('Falha em pegar os dados');\n    }).then(respostaConvertidaEmObjeto => respostaConvertidaEmObjeto); // .catch((err) => {\n    //   // console.error(err);\n    // });\n    // console.log('dbExterno', dbExterno);\n    // console.log('Infos que o Next da para nós', context.query.id);\n\n    return {\n      props: {\n        dbExterno\n      }\n    };\n  } catch (err) {\n    throw new Error(err);\n  }\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/fuvestlivrosquiz/pages/quiz/[id].js"],"names":["React","ThemeProvider","QuizScreen","QuizDaGaleraPage","dbExterno","theme","questions","bg","getServerSideProps","context","projectName","githubUser","query","id","split","fetch","then","respostaDoServer","ok","json","Error","respostaConvertidaEmObjeto","props","err"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,eAAe,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAyC;AACtD;AACA;AACA;AACA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEA,SAAS,CAACC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,iBAAiB,EAAED,SAAS,CAACE,SAD/B;AAEE,IAAA,UAAU,EAAEF,SAAS,CAACG,EAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAOE;AACA;AACA;AATF;AAWD;AAED,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BF,OAAO,CAACG,KAAR,CAAcC,EAAd,CAAiBC,KAAjB,CAAuB,KAAvB,CAAlC;;AAEA,MAAI;AACF,UAAMV,SAAS,GAAG,MAAMW,KAAK,CAAE,WAAUL,WAAY,IAAGC,UAAW,oBAAtC,CAAL,CACrBK,IADqB,CACfC,gBAAD,IAAsB;AAC1B,UAAIA,gBAAgB,CAACC,EAArB,EAAyB;AACvB,eAAOD,gBAAgB,CAACE,IAAjB,EAAP;AACD;;AACD,YAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD,KANqB,EAOrBJ,IAPqB,CAOfK,0BAAD,IAAgCA,0BAPhB,CAAxB,CADE,CASA;AACA;AACA;AACA;AACA;;AACF,WAAO;AACLC,MAAAA,KAAK,EAAE;AACLlB,QAAAA;AADK;AADF,KAAP;AAKD,GAnBD,CAmBE,OAAMmB,GAAN,EAAW;AACX,UAAM,IAAIH,KAAJ,CAAUG,GAAV,CAAN;AACD;AACF","sourcesContent":["import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport QuizScreen from '../../src/screens/Quiz';\n\nexport default function QuizDaGaleraPage({ dbExterno }) {\n  // const [db, setDb] React.useState({}) //NUNCA viria pre-renderizado\n  // React.useEffect(() => {\n  // });\n  return (\n    <ThemeProvider theme={dbExterno.theme}>\n      <QuizScreen\n        externalQuestions={dbExterno.questions}\n        externalBg={dbExterno.bg}\n      />\n    </ThemeProvider>\n    // {/* <pre style={{ color: 'black' }}>\n    //   {JSON.stringify(dbExterno.questions, null, 4)}\n    // </pre> */}\n  );\n}\n\nexport async function getServerSideProps(context) {\n  const [projectName, githubUser] = context.query.id.split('___');\n\n  try {\n    const dbExterno = await fetch(`https://${projectName}.${githubUser}.vercel.app/api/db`)\n      .then((respostaDoServer) => {\n        if (respostaDoServer.ok) {\n          return respostaDoServer.json();\n        }\n        throw new Error('Falha em pegar os dados');\n      })\n      .then((respostaConvertidaEmObjeto) => respostaConvertidaEmObjeto)\n      // .catch((err) => {\n      //   // console.error(err);\n      // });\n      // console.log('dbExterno', dbExterno);\n      // console.log('Infos que o Next da para nós', context.query.id);\n    return {\n      props: {\n        dbExterno,\n      },\n    };\n  } catch(err) {\n    throw new Error(err);\n  }\n}"]},"metadata":{},"sourceType":"module"}